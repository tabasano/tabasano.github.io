<!doctype html>
<html lang='ja'>
<head>
<meta charset="UTF-8">
<title>
web storage test
</title>
</head>
<body>
<script>
document.body.style.backgroundColor="#dfefe0";
if(!localStorage.count) localStorage.count=1;
let lspre=""+localStorage.count+"_";
let currentnumber=1;
let pos1=0;
let stepcount=25;
let editnumber=false;
let copybuffer="";


function export2file(filename)
{
  let text = JSON.stringify(localStorage);
  let blob = new Blob([text], {type: "text/plain"});

  if(window.navigator.msSaveBlob) {
    window.navigator.msSaveBlob(blob, filename);
  } else {
    let a = document.createElement("a");
    a.href = URL.createObjectURL(blob);
    a.target = '_blank';
    a.download = filename;
    a.click();
  }
}

//dump memo
//Object.keys(localStorage).forEach(key=>console.log(key,localStorage[key]));
//Object.keys(localStorage).map(key=>localStorage[key].length).reduce((s,n)=>s+n);
function escape_html(string) {
  if(typeof string !== 'string') {
    return string;
  }
  return string.replace(/[&'`"<>]/g, function(match) {
    return {
      '&': '&amp;',
      "'": '&#x27;',
      '`': '&#x60;',
      '"': '&quot;',
      '<': '&lt;',
      '>': '&gt;',
    }[match]
  });
}
function unescape_html(string) {
  if(typeof string !== 'string') {
    return string;
  }
  return string.replace(/&amp;|&#x27;|&#x60|&quot;|&gt;|&lt;/g, function(match) {
    return {
      '&amp;'  :'&',
      '&#x27;' :"'",
      '&#x60;' :'`',
      '&quot;' :'"',
      '&lt;'   :'<',
      '&gt;'   :'>',
    }[match]
  });
}
function countdown()
{
  localStorage.count-=stepcount;
  if (localStorage.count<0) localStorage.count=0;
}
function countup()
{
  localStorage.count=stepcount+Number(localStorage.count);
  let max=Object.keys(localStorage).length;
  if (max<=localStorage.count) localStorage.count=max-stepcount;
}
function get_percent()
{
  const limit=5000000;
  sum=Object.keys(localStorage).map(key=>localStorage[key].length).reduce((s,n)=>s+n);
  per=sum*100/limit;
  if(per>75) {
    alert_color="orange";
    if(per>85) {
      alert_color="red";
    }
    if(per>95) {
      alert_color="black";
    }
    document.body.style.backgroundColor=alert_color;
  }
  return per.toFixed(2);
}
function set_percent_hint()
{
  let page=get_memo_keys().length;
  document.querySelector(".limit_hint").innerText=get_percent()+"%"+page+"枚";
}
function limit_check()
{
  const limit=5000000;//*0.7;
  sum=Object.keys(localStorage).map(key=>localStorage[key].length).reduce((s,n)=>s+n);
  percentage=(sum*100/limit).toFixed(2);
  alert(sum+"/"+limit+" ("+percentage+"%)");
  if(sum>limit){
    countnow=localStorage.count;
    target=localStorage.length/2;
    Object.keys(localStorage).sort().slice(0,target).forEach(key=>localStorage.removeItem(key));
    localStorage.count=countnow;
  }
}
function reset_ls(){
  Object.keys(localStorage).forEach(key=>localStorage.removeItem(key));
  localStorage.count=0;
}
function counter()
{
  document.querySelector("#list_part").innerHTML=localStorage.count;
}
function log()
{
  console.log(localStorage);
}
function listup(ks)
{
  document.querySelector("#list_part").innerHTML=ks.map(
      key=>{
        let maxlength=25;
        let size=localStorage[key].length;
        let title=get_title(key);
        keypart="<button onClick='view_item(\""+key+"\")'>"+title+"</button>";
        return keypart+":"+localStorage[key].substring(0,maxlength)+"("+size+")" ;
      }
    ).join("<br>");
  edit(ks[0]);
}
function get_memo_keys()
{
  ks=Object.keys(localStorage).filter(key=>{
    //return (key.slice(0,1)!="T" && key!="count" && key.slice(0,2)!="t_");
    return key.match(/^\d+-\d+-/);
  }).sort();
  return ks;
}
function all_item()
{
  ks=get_memo_keys();
  list=ks.map(
      key=>{
        let maxlength=25;
        let size=localStorage[key].length;
        let klen=5;
        let title=get_title(key).substring(0,klen);
        keypart="<button onClick='view_item(\""+key+"\")'>"+title+"</button>";
        return keypart;
      }
    ).join("");
  //hide_button="<button onClick='listclear();'>hide list</button><br>";
  document.querySelector("#list_part").innerHTML=list;
  //edit(ks[0]);
}
function disp()
{
  //console.log(Object.keys(localStorage));
  //pos1=0;
  pos1=Number(localStorage.count);
  length=stepcount;
  pos2=pos1+length;
  //console.log(pos1,pos2);
  ks=get_memo_keys();
  list=ks.slice(pos1,pos2).map(
      key=>{
        let maxlength=25;
        let size=localStorage[key].length;
        let title=get_title(key);
        keypart="<button onClick='view_item(\""+key+"\")'>"+title+"</button>";
        return keypart+":"+localStorage[key].substring(0,maxlength)+"("+size+")" ;
      }
    ).join("<br>");
  //hide_button="<button onClick='listclear();'>hide list</button><br>";
  document.querySelector("#list_part").innerHTML=list;
  edit(ks[pos1]);
}
function view_item(key)
{
  edit(key);
  //console.log(key);
  //let item=key+"<hr>"+localStorage[key].split("\n").join("<br>");
  //let editpart="<button onClick='edit(\""+key+"\")'>edit</button>";
  //document.querySelector("#list_part").innerHTML=item+editpart;
}
function listclear()
{
console.log(90);
  target=document.querySelectorAll("#list_part");
  for(let i in target){
    target[i].innerHTML="";
  }
}
function reload()
{
  disp();  
}
function click_fnc(fnc,arg,desc)
{
  return "<button onClick=\""+fnc+"('"+arg+"');\">"+desc+"</button>";
}
function edit(key)
{
  let val=localStorage[key];
  editnumber=key;
  document.querySelector("textarea").value=unescape_html(val);
  //clear();
  let hint="(new)";
  edit_title_part="<button onClick='edit_title(\""+key+"\");reload();'>title?</button>"+
                  "(tag: "+
                  item2tags(key).map(i=>{return click_fnc("tags",i,i);}).join(",")+
                  ")"+
                  "<button onClick='edit_tag(\""+key+"\");reload();'>+tag</button>";
  hint="<h2>"+get_title(key) + " " + edit_title_part +"</h2>"+key;
  document.querySelector(".text_hint").innerHTML=hint;
}
function new_item()
{
  editnumber=false;
  document.querySelector("textarea").value="";
  let hint="(new)";
  document.querySelector(".text_hint").innerHTML=hint;
}
function get_title_key(key)
{
  return "T"+key;
}
function get_title(key)
{
  let keylength=19;
  return localStorage[get_title_key(key)]||key.substring(0,keylength);
}
function set_title(key,val)
{
  localStorage[get_title_key(key)]=val;
}
function set_tag(itemkey,val)
{
  arr=val.split(",");
  for(let i in arr) {
    add_tag(arr[i],itemkey);
  }
}
function all_tags()
{
  ks=Object.keys(localStorage).filter(key=>{return key.substring(0,2)==="t_";});
  return ks.map(i=>i.substring(2));
}
function tag2items(tag)
{
  tagkey="t_"+tag;
  return (localStorage[tagkey]||"").split(",");
}
function add_tag(tagname,itemkey)
{
  items=tag2items(tagname);
  tagkey="t_"+tagname;
  if(items.indexOf(itemkey)===-1) {
    items.push(itemkey);
    localStorage[tagkey]=items;
  }
}
function item2tags(itemkey)
{
  all_tag=all_tags();
  return all_tag.filter(i=>tag2items(i).indexOf(itemkey)!==-1);
}
function save()
{
  let key=editnumber;
  if(!key) key=(new Date()).toISOString();
  console.log(key);
  edit_title(key);
  let val=document.querySelector("textarea").value;
  localStorage[key]=escape_html(val);
  editnumber=false;
  currentnumber++;
  document.querySelector("textarea").value="";
  let hint="(new)";
  document.querySelector(".text_hint").innerHTML=hint;
  set_percent_hint();
}
function del()
{
  let key=editnumber;
  console.log(key);
  if(!key) return;
  if(!confirm("delete "+key)) return;
  localStorage.removeItem(key);
  localStorage.removeItem(get_title_key(key));
  reload();
  set_percent_hint();
}
function edit_title(key)
{
  if(ans=prompt("title?",get_title(key))) {
    set_title(key,ans);
  }
}
function edit_tag(key)
{
  if(ans=prompt("tag?",get_title(key))) {
    set_tag(key,ans);
  }
}
function cache_size()
{
  return Object.keys(localStorage).length-1;
}
function copy()
{
  copybuffer=document.querySelector("textarea").value;
  alert("copied.");
}
function paste()
{
  document.querySelector("textarea").value+=copybuffer;
}
function search()
{
  if(ans=prompt("search","")){
    rg=new RegExp(ans, 'i');
    ks=get_memo_keys().filter(key=>{return key.match(rg)||localStorage[key].match(rg);}).sort();
    //console.log(ans,rg,ks,ks.map(k=>localStorage[k]));
    listup(ks);
  }
}
function tag2itemlink(key)
{
  items=localStorage[key].split(",").filter(k=>k.length>0);
  return items.map(k=>{
      title=get_title(k);
      return "<button onClick='view_item(\""+k+"\")'>"+title+"</button>";
    }).join(",");
}
function tags(tag)
{
  rg=new RegExp("^t_");
  if(tag) rg=new RegExp("^t_"+tag+"$");
  ks=Object.keys(localStorage).filter(key=>{return key.match(rg)||localStorage[key].match(rg);}).sort();
  list=ks.map(
      key=>{
        let maxlength=25;
        let size=localStorage[key].length;
        let title=key.substring(2);
        keypart="<button onClick='view_item(\""+key+"\")'>"+title+"</button>";
        return keypart+"-> "+tag2itemlink(key);
      }
    ).join("<br>");
  document.querySelector("#list_part").innerHTML=list;
}
function tag2keys(tag)
{
  tagkey="^t_"+tag;
  list=localStorage[tagkey].split(",");
  return list;
}
function file2import()
{
  document.querySelector("#list_part").innerHTML="<input type='file' id='import_file'>";
  let import1 = document.getElementById("import_file");
  
  import1.addEventListener("change",function(e){
    if(!confirm("上書きします、よろしいですか？")) {
      return;
    }
    let file = e.target.files;
    let reader = new FileReader();
    reader.readAsText(file[0]);
    reader.onload = function(e){
      d=JSON.parse(reader.result);
      keys=Object.keys(d);
      let counter=0;
      for(let i in keys) {
        localStorage[keys[i]]=d[keys[i]];
        counter++;
      }
      alert(counter+"項目をインポートしました。");
      document.querySelector("#list_part").innerHTML="";
      set_percent_hint();
    }
  },false);
}
function info()
{
  alert("メモ帳：ローカル(localStorage)に保存します。5MBまで（ブラウザによります）");
}
function submenu()
{
  let submenu='<button onClick=\'if(confirm(cache_size()+" data reset, really?")){reset_ls();counter();};\'>reset</button>'+
          '<button onClick=\'export2file("export.txt");\'>export</button>'+
          '<button onClick=\'file2import();\'>import</button>'+
          '<button onClick=\'info();\'>?</button>';
  document.querySelector("#list_part").innerHTML="sub menu: "+submenu;
}
</script>
<button onClick='new_item();'>新規作成</button>
<!--
<button onClick='log();'>log</button>
<button onClick='disp();'>list</button>
-->
<button onClick='countdown();disp();'>&lt;</button>
<button onClick='countup();disp();'>&gt;</button>
<button onClick='all_item();'>all</button>
<!--
<button onClick='copy();'>copy</button>
<button onClick='paste();'>paste</button>
-->
<button onClick='search();'>検索</button>
<button onClick='tags();'>tag</button>
<button onClick='listclear();'>hide</button>
<!--
<button onClick='limit_check();'>limit check</button>
-->
<button onClick='submenu();'>v</button>
<span class="limit_hint"></span>
<hr>
<div id="list_part">test
</div>
<hr>
<p class="text_hint"></p>
<textarea rows=25 cols=80></textarea>
<button onClick='save();'>保存</textarea>
<button onClick='del();'>削除</textarea>
<script>
  const max=100;
  if(localStorage.count>max){reset_ls();};
  counter();
  //clear();
  countdown();
  set_percent_hint();
  document.querySelector(".limit_hint").style.color="blue";
</script>
</body>
</html>
